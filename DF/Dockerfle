docker run -d  -e DRONE_GOGS=true -e DRONE_GOGS_URL=http://127.0.0.1:3000  -e DRONE_SECRET=... -e DRONE_SECRET=... -e DRONE_OPEN=true  -v /var/lib/drone:/var/lib/drone -p 80:8000  --restart=always  --name=drone drone/drone:0.5



 docker run -d -e DRONE_SERVER=ws://172.17.0.1/ws/broker -e DRONE_SECRET=...  -v /var/run/docker.sock:/var/run/docker.sock --restart=always  --name=drone-agent drone/drone:0.5 agent



version: '2'
 
services:
  drone-server:
    image: drone/drone:0.8
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /tmp/drone:/var/lib/drone/
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=http://10.100.100.32:9000
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=http://10.100.100.32:3000
      - DRONE_SECRET=test
  drone-agent:
    image: drone/agent:0.8
    command: agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - drone-server
    environment:
      - DRONE_SERVER=10.100.100.32:9000
      - DRONE_SECRET=test









version: '2'
services:
    postgres:
      image: postgres:9.5
      restart: always
      ports:
       - "5432:5432"
      environment:
       - "POSTGRES_USER=admin"
       - "POSTGRES_PASSWORD=123456"
       - "POSTGRES_DB=gogs"
      networks:
       - gogs
    gogs:
      image: gogs/gogs:latest
      restart: always
      ports:
       - "10022:22"
       - "3000:3000"
      links:
       - postgres
      environment:
       - "RUN_CROND=true"
      networks:
       - gogs
      depends_on:
       - postgres

networks:
    gogs:
      driver: bridge





version: '2'

services:
  drone-server:
    image: drone/drone:0.7
    ports:
      - 8000:8000
    volumes:
      - /tmp/drone:/var/lib/drone/
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_ADMIN=yqguo
      - DRONE_HOST=192.168.31.114
      - DRONE_SECRET=yqguo
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=http://192.168.31.114:3000
      # - DRONE_GOGS_GIT_USERNAME=yqguo
      # - DRONE_GOGS_GIT_PASSWORD=123456
      - DRONE_GOGS_PRIVATE_MODE=true
      - DRONE_GOGS_SKIP_VERIFY=false
  drone-agent:
    image: drone/drone:0.7
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=yqguo



